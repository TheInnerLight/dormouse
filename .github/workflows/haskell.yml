name: Haskell Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        ghc: ['9.0.2']
        cabal: ['3.6.2.0']
        os: [ubuntu-latest]
        resolver: [lts-19.11]
    name: ${{ matrix.resolver }} (${{ matrix.ghc }}/${{ matrix.cabal }})
    steps:

      - name: Check out
        uses: actions/checkout@v2

      - name: Setup Haskell
        uses: haskell/actions/setup@v1
        with:
          ghc-version: ${{ matrix.ghc }}
          cabal-version: ${{ matrix.cabal }}
          enable-stack: true

      - name: Versions
        run: |
          stack --version
          cabal --version
          ghc --version

      - name: Initalize stack for LTS
        run: |
          stack update
          stack init --resolver ${{ matrix.resolver }} --force
          
      - name: Cache
        uses: actions/cache@v3
        env:
          cache-name: cache-stack
        with:
          path: |
            ~/.stack
            .stack-work
          key: ${{ runner.os }}-stack-${{ hashFiles('stack.yaml.lock', 'package.yaml') }}
          restore-keys: |
            ${{ runner.os }}-stack

      - name: Build package dependencies
        run: |
          stack --resolver ${{ matrix.resolver }} build --no-run-tests --no-run-benchmarks --only-dependencies

      - name: Build package
        run: |
          stack --resolver ${{ matrix.resolver }} build --no-run-tests --no-run-benchmarks

      - name: Build testing dependencies
        run: |
          stack --resolver ${{ matrix.resolver }} build --no-run-tests --no-run-benchmarks --test --bench

      - name: Run tests
        run: |
          stack --resolver ${{ matrix.resolver }} build --test --no-run-benchmarks

      - name: Package list
        run: |
          stack --resolver ${{ matrix.resolver }} exec ghc-pkg list || true
          
      - name: Builld documentation
        run: |
          stack --resolver ${{ matrix.resolver }} haddock
          
      - name: Create Dormouse-Uri Tarball
        run: |
          stack --resolver ${{ matrix.resolver }} sdist dormouse-uri
          
      - name: Create Dormouse-Client Tarball
        run: |
          stack --resolver ${{ matrix.resolver }} sdist dormouse-client
          
      - name: Upload Dormouse-Uri Candidate Package
        env:
          HACKAGE_KEY: ${{ secrets.HACKAGE_API_KEY }}
        run: |
          stack --resolver ${{ matrix.resolver }} upload --candidate dormouse-uri
          
      - name: Upload Dormouse-Client Candidate Package
        env:
          HACKAGE_KEY: ${{ secrets.HACKAGE_API_KEY }}
        run: |
          stack --resolver ${{ matrix.resolver }} upload --candidate dormouse-client
